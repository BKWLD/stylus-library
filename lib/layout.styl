/**
 * Fill the container
 *
 * @param string $color background color
*/
expand(color = '')
	position absolute
	top 0
	bottom 0
	left 0
	right 0
	width 100%
	height 100%
	if color
		background-color color

/**
 * Setup background cover
 */
cover()
	background-size cover
	background-position center center
	background-repeat no-repeat

/**
 * Center using absolute position and transforms.  This technique is easier to
 * use but can sometimes lead to blurry text / contents.  It works best if the
 * content being vertically aligned has a fixed height.
 *
 * http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/
 * http://davidwalsh.name/css-vertical-center
 *
 * Note, if parent is blurry, you can try add to parent:
 *
 *   transform-style: preserve-3d
 *
 * About the h-center using `right`: http://stackoverflow.com/a/27990348/59160
 */

center()
	position absolute
	top 50%
	right 50%
	transform translate(50%, -50%)
v-center()
	position absolute
	top 50%
	transform translateY(-50%)
h-center()
	position absolute
	right 50%
	transform translateX(50%)

/**
 * Transform using pseduo element and vertical-align. This technique can add
 * invisible space with a width to the inside of what you add this to which can
 * make 100% width contents display wrong.  This can be fixed, however, by
 * making the parent have `font-size: 0` and then restoring the font-size in the
 * child.
 *
 * See: http://css-tricks.com/centering-in-the-unknown/
 */

// Horizontal center as well as vertical
pseudo-center(with-children = false)
	pseudo-v-center(with-children)
	text-align center

 // Add this to the containing div of the items to be centered
pseudo-v-center(with-children = false)
	&:before
		content ''
		display inline-block
		height 100%
		vertical-align middle

	// Make the contents vertically aligned
	if with-children
		> *
			pseudo-v-center-content()

// Add this to the actual block of content you want centered
pseudo-v-center-content()
	display inline-block
	vertical-align middle

/**
 * Center children using display: flex
 */

flex-center()
	display flex
	align-items center
	justify-content center

flex-h-center()
	display flex
	justify-content center

flex-v-center()
	display flex
	align-items center

/**
 * Give the div a fixed aspect ratio using psuedo elements. Defaults to
 * centering the content
 *
 * @param  float aspect  The aspect ratio as a float, ex: 19/9
 * @param  boolean center  Whether the vertically align the contents
 */
aspect-ratio(aspect, center = true)

	// Set aspect ratio
	&:before
		content ''
		padding-top 'calc(100% / %s)' % aspect
		height 100%
		display inline-block

		// Center the content
		if center
			vertical-align middle

	// Sets the font-size to 0 to prevent contents from wrapping to the next line
	font-size 0
	> *
		font-size body-font-size

		// Center the content
		if center
			display inline-block
			vertical-align middle

/**
 * Set two dimensions at the same time
 *
 * @param unit size
 */
padding-h(size)
	padding-left size
	padding-right size
padding-v(size)
	padding-top size
	padding-bottom size
margin-h(size)
	margin-left size
	margin-right size
margin-v(size)
	margin-top size
	margin-bottom size
